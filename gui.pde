/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:893059:
  appc.background(230);
} //_CODE_:window1:893059:

public void FrameRateChange(GSlider source, GEvent event) { //_CODE_:RateSlider:286186:
  framesPerSec  = RateSlider.getValueI();
  //println("FrameRate - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:RateSlider:286186:

public void env2(GButton source, GEvent event) { //_CODE_:coldenv:860783:
  environment = "cold";
  Survival();
  //println("coldenv - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:coldenv:860783:

public void env1(GButton source, GEvent event) { //_CODE_:hotenv:317290:
  environment = "hot";
  Survival();
  //println("hotenv - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:hotenv:317290:

public void env3(GButton source, GEvent event) { //_CODE_:nuetenv:419052:
  environment = "normal";
  Survival();
  //println("nuetenv - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:nuetenv:419052:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:882771:
  reset();
  //println("button1 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:button1:882771:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:321890:
  pause = !pause;
  //println("button2 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:button2:321890:

public void Conjchange1(GCustomSlider source, GEvent event) { //_CODE_:ConjugationSlider:778385:
  r = ConjugationSlider.getValueI();
  //println("ConjugationSlider - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:ConjugationSlider:778385:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 240, 200, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  RateSlider = new GSlider(window1, 130, 2, 100, 40, 10.0);
  RateSlider.setLimits(10, 10, 50);
  RateSlider.setNbrTicks(5);
  RateSlider.setNumberFormat(G4P.INTEGER, 0);
  RateSlider.setOpaque(false);
  RateSlider.addEventHandler(this, "FrameRateChange");
  label1 = new GLabel(window1, 18, 11, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Frame Rate");
  label1.setOpaque(true);
  coldenv = new GButton(window1, 164, 109, 62, 30);
  coldenv.setText("Cold");
  coldenv.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  coldenv.addEventHandler(this, "env2");
  hotenv = new GButton(window1, 5, 110, 59, 30);
  hotenv.setText("Hot");
  hotenv.setLocalColorScheme(GCScheme.RED_SCHEME);
  hotenv.addEventHandler(this, "env1");
  label2 = new GLabel(window1, 13, 82, 203, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Environment Factor Change");
  label2.setOpaque(true);
  nuetenv = new GButton(window1, 85, 109, 63, 32);
  nuetenv.setText("Neutral");
  nuetenv.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  nuetenv.addEventHandler(this, "env3");
  button1 = new GButton(window1, 6, 164, 80, 30);
  button1.setText("RESET");
  button1.addEventHandler(this, "button1_click1");
  button2 = new GButton(window1, 147, 163, 84, 30);
  button2.setText("PAUSE");
  button2.addEventHandler(this, "button2_click1");
  ConjugationSlider = new GCustomSlider(window1, 131, 46, 100, 31, "grey_blue");
  ConjugationSlider.setLimits(1, 1, 5);
  ConjugationSlider.setNumberFormat(G4P.INTEGER, 0);
  ConjugationSlider.setOpaque(false);
  ConjugationSlider.addEventHandler(this, "Conjchange1");
  label3 = new GLabel(window1, 18, 47, 88, 26);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Conjugation Rate");
  label3.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  label3.setOpaque(true);
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GSlider RateSlider; 
GLabel label1; 
GButton coldenv; 
GButton hotenv; 
GLabel label2; 
GButton nuetenv; 
GButton button1; 
GButton button2; 
GCustomSlider ConjugationSlider; 
GLabel label3; 
